version: "3"

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
      - AWS_REGION=ap-northeast-1
      - AWS_SECRET_MANAGER_ENABLED=false
      - LOG_LEVEL=INFO
      - LOG_FILE=/app/logs/app.log
      - AUDIT_LOG_FILE=/app/logs/audit.log
    volumes:
      - ./:/app
      - ./logs:/app/logs
    depends_on:
      - postgres
    networks:
      - mcp-network

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mcp_client
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - mcp-network

  # 開発用のみのサービス
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - mcp-network
    profiles:
      - dev

  # モックサービス（開発用）
  mock-gmail:
    build:
      context: .
      dockerfile: docker/mock-services/gmail.Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./docker/mock-services/gmail:/app
    networks:
      - mcp-network
    profiles:
      - dev

  mock-notion:
    build:
      context: .
      dockerfile: docker/mock-services/notion.Dockerfile
    ports:
      - "8002:8002"
    volumes:
      - ./docker/mock-services/notion:/app
    networks:
      - mcp-network
    profiles:
      - dev

networks:
  mcp-network:
    driver: bridge

volumes:
  postgres_data:
